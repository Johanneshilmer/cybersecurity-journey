
Pyramid of Pain

"Pyramid of Pain" √§r ett begrepp inom cybers√§kerhet som skapades av David Bianco. 
Det √§r en modell som visar hur sv√•rt det √§r f√∂r en angripare att forts√§tta sina attacker n√§r du som f√∂rsvarare stoppar eller st√∂r deras olika indikatorer.
Modellen √§r formad som en pyramid med olika niv√•er:
1. Hash values
  Exempel: MD5/SHA1/SHA256-hashar av skadlig kod.
  Enkla att byta f√∂r angriparen (bara kompilera om eller √§ndra filen).
  Ger liten sm√§rta.

2. IP addresses
  Angriparens C2- eller botnet-servrar.
  L√§tta att byta, de kan hyra nya servrar eller anv√§nda proxy/botn√§t.

3. Domain names
  Angriparens dom√§ner som anv√§nds f√∂r C2 eller phishing.
  Lite sv√•rare och dyrare att ers√§tta √§n IP-adresser, men fortfarande relativt enkelt.

4. Network/Host Artifacts
  T.ex. registernycklar, filer p√• systemet, ovanliga processer.
  Kr√§ver mer arbete f√∂r angriparen att √§ndra eftersom det √§r kopplat till deras verktyg.

5. Tools
  Malware, skript, exploits som angriparen anv√§nder.
  Om du kan uppt√§cka och blockera deras verktyg blir det riktigt jobbigt f√∂r dem ‚Äì de m√•ste utveckla eller skaffa nya.

6. Tactics, Techniques, and Procedures (TTPs)
  Angriparens arbetsmetoder och beteendem√∂nster (hur de r√∂r sig i n√§tverket, hur de sprider sig, hur de stj√§l data).
  Sv√•rast att √§ndra f√∂r angriparen eftersom det bygger p√• deras kunskap, tr√§ning och resurser.
  Ger st√∂rst "pain" om du uppt√§cker och stoppar dem h√§r.

üëâ Po√§ngen: Ju h√∂gre upp i pyramiden du kan f√∂rsvara dig, desto sv√•rare och dyrare blir det f√∂r angriparen att forts√§tta attacken.

TTPs st√•r f√∂r Tactics, Techniques & Procedures.
  Innefattar MITRE ATTACK Matrix som menas alla steg som beh√∂ver tas f√∂r att n√• sitt m√•l, startar med phishing f√∂rs√∂k f√∂r att n√• en startpunkt.





Cyber Kill Chain
  √Ñr en modell som utvecklades av Lockheed Martin och anv√§nds f√∂r att beskriva de olika stegen i en cyberattack. 
  Syftet √§r att f√∂rst√• angriparens metodik och d√§rmed kunna uppt√§cka och stoppa attacker i ett tidigt skede. H√§r √§r en beskrivning av varje steg:

1. Reconnaissance (Spaning)
  I detta inledande steg samlar angriparen information om m√•let. Det kan handla om att kartl√§gga n√§tverk, identifiera s√•rbara system, 
  eller samla in data om anst√§llda genom sociala medier.
  Exempel: Anv√§nda verktyg som Nmap f√∂r portskanning eller OSINT f√∂r att hitta e-postadresser.

2. Weaponization (Bev√§pning)
  H√§r f√∂rbereder angriparen sitt verktyg f√∂r attacken. Vanligtvis kombineras ett exploateringsverktyg med en skadlig nyttolast (payload).
  Exempel: Skapa ett Word-dokument med inb√§ddad makro-malware eller bygga en trojan som kan k√∂ras n√§r offret √∂ppnar filen.

3. Delivery (Leverans)
  Attackverktyget levereras till m√•let. Detta kan ske p√• flera s√§tt ‚Äì via e-post (phishing), USB-enheter, skadliga l√§nkar, eller utnyttjande av os√§kra tj√§nster.
  Exempel: Skicka ett e-postmeddelande med en bifogad infekterad fil.

4. Exploitation (Utnyttjande)
  N√§r m√•let interagerar med den levererade attacken utnyttjas en s√•rbarhet. H√§r f√•r angriparen tillg√•ng till systemet.
  Exempel: Ett klick p√• en l√§nk som aktiverar en s√•rbarhet i webbl√§saren, eller att √∂ppna ett dokument som k√∂r skadlig kod.

5. Installation (Installation)
  Efter att s√•rbarheten utnyttjats installeras skadlig kod, ofta i form av en trojan eller ett bakd√∂rrsprogram, f√∂r att beh√•lla √•tkomst till systemet.
  Exempel: En keylogger eller ett RAT (Remote Access Trojan) installeras p√• den infekterade datorn.

6. Command & Control (C2 / Kommando & Kontroll)
  Angriparen etablerar en kommunikationskanal mellan det infekterade systemet och sin egen server. Detta g√∂r att angriparen kan skicka instruktioner och ta emot data.
  Exempel: Malware kommunicerar med angriparens C2-server via HTTP/HTTPS eller DNS-tunnling.

7. Actions on Objectives (Genomf√∂rande av m√•l)
  Slutligen utf√∂r angriparen sina m√•l. Detta kan vara datast√∂ld, spionage, sabotage, kryptering av filer (ransomware) eller att sprida sig vidare i n√§tverket.
  Exempel: Exfiltrering av k√§nsliga filer, kryptering av databaser, eller att sabotera produktion.

üëâ Po√§ngen med Cyber Kill Chain 
  √Ñr att en f√∂rsvarare inte n√∂dv√§ndigtvis m√•ste stoppa angriparen i alla steg ‚Äì det r√§cker att uppt√§cka och blockera attacken i ett av stegen f√∂r att f√∂rhindra att m√•let uppn√•s.






Unified Kill Chain
  Den Unified Kill Chain √§r ett koncept inom cybers√§kerhet som anv√§nds f√∂r att beskriva och analysera hur cyberattacker genomf√∂rs steg f√∂r steg. 
  Det √§r en vidareutveckling och sammanslagning av olika ‚Äúkill chain‚Äù-modeller, 
  s√•som Lockheed Martins kill chain och MITRE ATT&CK-ramverket, f√∂r att ge en mer komplett bild av en attack.

  Vad √§r en kill chain?
    En kill chain beskriver de olika steg en angripare tar f√∂r att lyckas med en attack. Genom att f√∂rst√• dessa steg kan f√∂rsvarare identifiera var de kan stoppa attacken.

  Unified Kill Chain
    Syfte: Att skapa en mer holistisk modell som t√§cker alla faser av en attack ‚Äì fr√•n initial rekognosering till efterattack-aktiviteter.
    F√∂rdel: Ger ett gemensamt spr√•k och struktur f√∂r b√•de detektion och respons.
    Inneh√•ll: Kombinerar ofta steg fr√•n olika modeller (Lockheed Martin, MITRE ATT&CK) till en enhetlig kedja.

  Varf√∂r √§r Unified Kill Chain viktig?
    Hj√§lper s√§kerhetsteam att f√∂rst√• attacker som helhet.
    G√∂r det l√§ttare att planera f√∂rebyggande √•tg√§rder.
    Integrerar olika ramverk f√∂r mer effektiv detektion och respons.


Threat modelling
 √Ñr en metod f√∂r att identifiera, f√∂rst√• och hantera m√∂jliga hot mot ett system. H√§r √§r en detaljerad f√∂rklaring:

  Definition
    Threat modeling √§r processen d√§r man systematiskt analyserar ett system f√∂r att uppt√§cka potentiella s√§kerhetshot, s√•rbarheter och angripares m√∂jliga angreppsmetoder. 
    M√•let √§r att designa systemet s√• att riskerna minimeras.

  Grundl√§ggande steg i threat modeling
    1. Identifiera tillg√•ngar (Assets)
      - Vilka data, system eller resurser √§r v√§rdefulla?
    
    2. Skapa en arkitektur√∂versikt (Architecture Overview)
      - Rita upp systemets komponenter, datalagring, kommunikationsfl√∂den etc.
    
    3. Identifiera hot (Threat Identification)
      - Anv√§nd ramverk som STRIDE (Spoofing, Tampering, Repudiation, Information disclosure, Denial of service, Elevation of privilege) f√∂r att lista m√∂jliga attacker.
    
    4. Identifiera s√•rbarheter (Vulnerability Analysis)
      - Se vilka delar av systemet som √§r svaga eller kan utnyttjas.
    
    5. Prioritera risker (Risk Prioritization)
      - Bed√∂m sannolikhet och p√•verkan av olika hot f√∂r att fokusera p√• de viktigaste.
    
    6. F√∂resl√• mot√•tg√§rder (Mitigation)
      - Designa s√§kerhets√•tg√§rder som minskar eller eliminerar hoten.


  Varf√∂r threat modeling √§r viktigt
    - G√∂r s√§kerhet proaktiv ist√§llet f√∂r reaktiv.
    - Hj√§lper utvecklare att bygga s√§krare system fr√•n b√∂rjan.
    - Integreras ofta i DevSecOps och s√§ker mjukvaruutveckling.
