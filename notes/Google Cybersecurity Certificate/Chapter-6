Sound the alarm: Detection and response
Module 1

The 5 W's of an incident
  Who triggered the incident
  What happened
  When the incident took place
  Where the incident tooke place
  Why the incident occurred


NIST Incident Response Lifecycle
  FÃ¶r hur organisationer bÃ¶r hantera IT-incidenter, sÃ¤rskilt inom cybersÃ¤kerhet. Den bestÃ¥r av fyra steg som tillsammans bildar en cyklisk process:
  Innefattar 4 olika steg
    1. Preparation (FÃ¶rbered)
      ğŸ‘‰Utveckla policies och rutiner fÃ¶r incidenthantering.
      ğŸ‘‰TrÃ¤na personalen och skapa incident response team (IRT).
      ğŸ‘‰FÃ¶rbereda verktyg, loggning, Ã¶vervakning och system fÃ¶r att kunna upptÃ¤cka incidenter.
      ğŸ‘‰SÃ¤kerstÃ¤lla att det finns kommunikationsplaner (vem kontaktas och hur).
      Syftet: Att organisationen ska vara redo att agera snabbt och effektivt nÃ¤r en incident intrÃ¤ffar.
    2. Detection and analysis (UpptÃ¤ck och analysera.)
      ğŸ‘‰UpptÃ¤cka avvikande beteenden via loggar, SIEM, IDS/IPS, antivirus, anvÃ¤ndarrapporter osv.
      ğŸ‘‰Analysera indikatorer pÃ¥ kompromettering (IOCs).
      ğŸ‘‰AvgÃ¶ra om det faktiskt Ã¤r en sÃ¤kerhetsincident, vilken typ och hur allvarlig den Ã¤r.
      ğŸ‘‰Dokumentera hÃ¤ndelsen.
      Syftet: Att snabbt upptÃ¤cka och fÃ¶rstÃ¥ incidentens omfattning fÃ¶r att kunna agera rÃ¤tt.
    3. Containment, Eradication and Recovery (BegrÃ¤nsa, rensa och Ã¥terstÃ¤ll.)
      ğŸ‘‰Containment: BegrÃ¤nsa skadan och stoppa spridning (t.ex. isolera nÃ¤tverk, blockera konton).
      ğŸ‘‰Eradication: Ta bort sjÃ¤lva orsaken (t.ex. rensa malware, patcha sÃ¥rbarheter, stÃ¤nga bakdÃ¶rrar).
      ğŸ‘‰Recovery: Ã…terstÃ¤lla system till normal drift, kontrollera att hotet Ã¤r borta och att det inte finns risk fÃ¶r Ã¥terinfektion.
      Syftet: Att minimera skada, Ã¥terstÃ¤lla verksamheten och eliminera hotet.
    4. Post-Incident activity (LÃ¤r dig av incidenten.)
      ğŸ‘‰UtvÃ¤rdera vad som gick bra och vad som kan fÃ¶rbÃ¤ttras.
      ğŸ‘‰Dokumentera incidenten och lÃ¤rdomar.
      ğŸ‘‰Uppdatera policies, rutiner, och utbildningar.
      ğŸ‘‰Dela erfarenheter med relevanta parter (internt och ibland externt).
      Syftet: Att bli bÃ¤ttre fÃ¶rberedd infÃ¶r nÃ¤sta incident och minska risken fÃ¶r upprepning.


CSIRT (Computer security incident response teams)
  Ã„r ett specialiserat team inom en organisaton som ansvarar fÃ¶r att hantera och svara pÃ¥ IT-sÃ¤kerhetsincidenter
  Olika roller:
    Security analyst â€“ Ã¶vervakar system, analyserar och eskalerar hot.
    Technical lead â€“ hanterar tekniska Ã¥tgÃ¤rder som patchning, containment och recovery.
    Incident coordinator â€“ koordinerar med andra avdelningar (HR, juridik, PR, IT, m.fl.).
  Huvuduppgifter fÃ¶r ett CSIRT:
    1. Incidenthantering â€“ ta emot rapporter, analysera incidenter, och koordinera responsen.
    2. Kommunikation â€“ fungera som central kontaktpunkt fÃ¶r incidentrapportering, bÃ¥de internt (anstÃ¤llda, IT-avdelning) och externt (andra organisationer, myndigheter).
    3. Samordning â€“ koordinera arbetet mellan olika tekniska och organisatoriska grupper vid incidenter.
    4. FÃ¶rebyggande arbete â€“ analysera hotbilder, sprida information om sÃ¥rbarheter, och fÃ¶reslÃ¥ fÃ¶rbÃ¤ttringar av sÃ¤kerhetsrutiner.
    5. KunskapsÃ¶verfÃ¶ring â€“ utbilda personal och Ã¶ka medvetenheten om IT-sÃ¤kerhet.

SOC (Security Operations Center)
  Ett SOC Ã¤r en organisatorisk enhet (ofta separat, men ibland inom CSIRT) som ansvarar fÃ¶r Ã¶vervakning, analys och respons pÃ¥ hot.
  Struktur och roller:
    Tier 1 SOC Analyst (L1) â€“ minst erfarna, Ã¶vervakar, prioriterar och eskalerar larm.
    Tier 2 SOC Analyst (L2) â€“ mer erfarna, gÃ¶r djupare undersÃ¶kningar och justerar sÃ¤kerhetsverktyg.
    Tier 3 SOC Lead (L3) â€“ avancerade experter, leder teamet och utfÃ¶r avancerad analys (t.ex. forensik, malware-analys).
    SOC Manager â€“ leder hela SOC, ansvarar fÃ¶r rekrytering, rapportering och kommunikation med ledningen.
  Specialistroller i SOC:
    Forensic investigators â€“ samlar och analyserar digitala bevis.
    Threat hunters â€“ sÃ¶ker efter avancerade hot och nya attackmetoder.

ğŸ‘‰ Kort sagt:
  CSIRT Ã¤r incidentresponsteamet som samordnar insatser nÃ¤r nÃ¥got hÃ¤nder.
  SOC Ã¤r Ã¶vervaknings- och analysenheten som kontinuerligt letar efter hot och hanterar incidenter i realtid.


Incident response tools

  Typer av dokumentation
    ğŸ‘‰Playbooks
      En manual som ger information om Ã¥tgÃ¤rder fÃ¶r olika actions.
        Dokumentation tools: Google Docs, OneNote, Evernote, Notepad++
        Ticketing system: Jira
    ğŸ‘‰Incident handler's journals
    ğŸ‘‰Ploicies
    ğŸ‘‰Plans
    ğŸ‘‰Final reports

  Intrusion detection system (IDS)
    System som Ã¶vervakar system / network aktivitet och utger alerts pÃ¥ mÃ¶jliga intrÃ¥ng.
  Intrusion prevention system (IPS)
    System som Ã¶vervakar system / network aktivitet och sedan gÃ¶r "action" fÃ¶r att stoppa mÃ¶jliga intrÃ¥ng.
  IDS/IPS tools
    ğŸ‘‰Snort
    ğŸ‘‰Zeek
    ğŸ‘‰Kismet
    ğŸ‘‰Sagan
    ğŸ‘‰Suricata
  Endpoint Detection and Response (EDR)
    Till skillnad frÃ¥n IDS/IPS sÃ¥ kan EDR analysera och svara pÃ¥ hot med hjÃ¤lp av beteendeanalys, AI och automatisering. Detta gÃ¶r de sjÃ¤lv.
    Open EDR
    Bitdefender
    FortiEDR

ğŸ‘‰ Kort sagt: IDS upptÃ¤cker, IPS upptÃ¤cker och stoppar, medan EDR ger mer avancerad analys och automatiserade svar pÃ¥ hot direkt pÃ¥ enheterna.

Dessutom finns fyra centrala detektionskategorier:
  True positive: RÃ¤tt identifierat hot.
  True negative: Inget hot och ingen varning.
  False positive: Falsk varning, inget verkligt hot.
  False negative: Missat hot, farligt eftersom attacken fÃ¶rblir oupptÃ¤ckt.


Security Information and Event Management (SIEM)
  Ã„r verktyg som samlar in, lagrar och analyserar loggdata fÃ¶r att upptÃ¤cka, undersÃ¶ka och hantera sÃ¤kerhetsincidenter.
  FÃ¶rdelar med SIEM:
    - Ger tillgÃ¥ng till hÃ¤ndelsedata i realtid frÃ¥n mÃ¥nga olika system och enheter.
    - Ã–vervakar, upptÃ¤cker och skickar varningar vid misstÃ¤nkt aktivitet.
    - Lagrar loggar fÃ¶r bÃ¥de historisk analys och krav pÃ¥ datalagring.

  SIEM-processen bestÃ¥r av tre steg:
    1. Insamling och aggregering â€“ loggar frÃ¥n t.ex. brandvÃ¤ggar, servrar och routrar samlas i en central plats. Data parsas fÃ¶r att bli mer lÃ¤sbar.
    2. Normalisering â€“ data omvandlas till ett standardiserat, strukturerat format fÃ¶r att kunna bearbetas och sÃ¶kas effektivt.
    3. Analys â€“ med hjÃ¤lp av regler, villkor och korrelation mellan hÃ¤ndelser identifieras mÃ¶nster som tyder pÃ¥ hot, vilket genererar varningar.

Exempel pÃ¥ SIEM-verktyg: AlienVault OSSIM, Chronicle, Elastic, Exabeam, IBM QRadar, LogRhythm och Splunk.

ğŸ‘‰ Kort sagt: SIEM centraliserar och strukturerar loggdata frÃ¥n mÃ¥nga kÃ¤llor fÃ¶r att ge sÃ¤kerhetsteam mÃ¶jlighet att effektivt upptÃ¤cka, analysera och hantera potentiella hot.

Exempel pÃ¥ en logg:
  ğŸ‘‰April 3 11:01:21 server sshd[1088]: Failed password for user nuhara from 218.124.14.105 port 5023
      host = server
      process = sshd
      source_user = nuhara
      source ip = 218.124.14.105
      source port = 5023

Security Orchestration, Automation, and Response (SOAR)
  Samling av applikationer och vÃ¤rktyg samt workflows som anvÃ¤nder automation till att aggera mot sÃ¤kerhets event.








Module 2
Network monitoring and analysis

Indicators of compromise (IOC)
  Observerbara bevis som tyder pÃ¥ tecken pÃ¥ en potentiell sÃ¤kerhetsincident.
  Data exfiltration: ObehÃ¶rig Ã¶verfÃ¶ring av data frÃ¥n ett system till ett annat sÃ¥ som username, password som attackerare gÃ¶r.

NÃ¤tverksÃ¶vervakning Ã¤r avgÃ¶rande fÃ¶r att upptÃ¤cka avvikelser och misstÃ¤nkt aktivitet i nÃ¤tverkstrafiken. 
Genom att samla in och analysera data frÃ¥n nÃ¤tverkskommunikation kan sÃ¤kerhetsteam skapa en baseline (normal beteendenivÃ¥) och jÃ¤mfÃ¶ra mot den fÃ¶r att identifiera avvikelser.

Metoder fÃ¶r nÃ¤tverksÃ¶vervakning:
  FlÃ¶desanalys: undersÃ¶ker protokoll, portar och paketflÃ¶den. Avvikelser, som felaktiga port-protokoll-kombinationer, kan indikera attacker (t.ex. C2-kommunikation).
  PaketinnehÃ¥ll (payload): analyserar datan i nÃ¤tverkspaketen, ofta fÃ¶r att hitta misstÃ¤nkt trafik som kan tyda pÃ¥ datalÃ¤ckage.
  TidsmÃ¶nster: avvikelser i nÃ¤r trafiken sker (t.ex. stora datamÃ¤ngder utanfÃ¶r normala arbetstider) kan signalera intrÃ¥ng.

Skydd och roller:
  SOC (Security Operations Center): fokuserar pÃ¥ sÃ¤kerhet, upptÃ¤ckt och respons pÃ¥ hot.
  NOC (Network Operations Center): fokuserar pÃ¥ nÃ¤tverkets prestanda, tillgÃ¤nglighet och driftstÃ¶rningar.

Verktyg fÃ¶r nÃ¤tverksÃ¶vervakning:
  IDS (Intrusion Detection Systems): Ã¶vervakar och varnar vid intrÃ¥ngsfÃ¶rsÃ¶k.
  Protokollanalysatorer / Packet sniffers (t.ex. Wireshark, tcpdump): fÃ¥ngar och analyserar nÃ¤tverkstrafik i detalj.

ğŸ‘‰ Kort sagt: Genom att kÃ¤nna sitt nÃ¤tverk, faststÃ¤lla en baseline och anvÃ¤nda Ã¶vervakningsverktyg kan organisationer snabbt upptÃ¤cka intrÃ¥ng och skydda sina system.


Inom TCP/IP modellen som bestÃ¥r av 
  - Application
  - Transport
  - Internet
  - Network Access
Ã„r alltsÃ¥ "Internet" dÃ¤r alla packets och kommunikationen sker.


IPv4 och IPv6 Ã¤r uppbyggda pÃ¥ olika sÃ¤tt som gÃ¶r att Header fÃ¶r dessa ser olika ut.

IPv4: Ã„r mest anvÃ¤nd verisionen av IP, det finns 13 fÃ¤lt i det "header":
  - Version: Detta fÃ¤lt anger IP-version. FÃ¶r en IPv4-header anvÃ¤nds IPv4.
  - Internet Header Length (IHL): Detta fÃ¤lt anger lÃ¤ngden pÃ¥ IPv4-headern, inklusive eventuella alternativ (Options).
  - Type of Service (ToS): Detta fÃ¤lt innehÃ¥ller information om paketets prioritet fÃ¶r leverans.
  - Total Length: Detta fÃ¤lt anger den totala lÃ¤ngden pÃ¥ hela IP-paketet, inklusive headern och datan.
  - Identification: Paket som Ã¤r fÃ¶r stora fÃ¶r att skickas delas upp i fragment. Detta fÃ¤lt anger en unik identifierare fÃ¶r fragmenten av det ursprungliga IP-paketet, sÃ¥ att de kan sÃ¤ttas ihop igen vid mottagaren.
  - Flags: Detta fÃ¤lt innehÃ¥ller information om fragmentering, t.ex. om paketet har delats upp och om det finns fler fragment pÃ¥ vÃ¤g.
  - Fragment Offset: Detta fÃ¤lt anvÃ¤nds fÃ¶r att placera fragmenten i rÃ¤tt ordning nÃ¤r paketet sÃ¤tts ihop igen.
  - Time to Live (TTL): Detta fÃ¤lt begrÃ¤nsar hur lÃ¤nge ett paket kan cirkulera i nÃ¤tverket och fÃ¶rhindrar att det skickas runt mellan routrar oÃ¤ndligt.
  - Protocol: Detta fÃ¤lt anger vilket protokoll som anvÃ¤nds fÃ¶r datapaketets innehÃ¥ll.
  - Header Checksum: Detta fÃ¤lt innehÃ¥ller ett checksummevÃ¤rde som anvÃ¤nds fÃ¶r att kontrollera om headern har nÃ¥gra fel.
  - Source Address: Detta fÃ¤lt anger avsÃ¤ndarens IP-adress.
  - Destination Address: Detta fÃ¤lt anger mottagarens IP-adress.
  - Options: Detta fÃ¤lt Ã¤r valfritt och kan anvÃ¤ndas fÃ¶r att tillÃ¤mpa exempelvis sÃ¤kerhetsinstÃ¤llningar fÃ¶r paketet.
  
IPv6: Har Ã¶kat pga dess stora adressutrymme. Det finns Ã¥tta fÃ¤lt i "header"
  - Version: Detta fÃ¤lt anger IP-version. FÃ¶r en IPv6-header anvÃ¤nds IPv6.
  - Traffic Class: Detta fÃ¤lt motsvarar ungefÃ¤r Type of Service i IPv4. Det anger paketets prioritet eller klass fÃ¶r att underlÃ¤tta leverans.
  - Flow Label: Detta fÃ¤lt identifierar paket som tillhÃ¶r samma flÃ¶de. Ett flÃ¶de Ã¤r en fÃ¶ljd av paket som skickas frÃ¥n en specifik kÃ¤lla.
  - Payload Length: Detta fÃ¤lt anger lÃ¤ngden pÃ¥ datapaketets innehÃ¥ll (dvs. datadelen).
  - Next Header: Detta fÃ¤lt anger vilken typ av header som fÃ¶ljer efter IPv6-headern, t.ex. TCP.
  - Hop Limit: Detta fÃ¤lt fungerar som Time to Live (TTL) i IPv4. Det begrÃ¤nsar hur lÃ¤nge ett paket fÃ¥r fÃ¤rdas i nÃ¤tverket innan det kastas bort.
  - Source Address: Detta fÃ¤lt anger avsÃ¤ndarens IP-adress.
  - Destination Address: Detta fÃ¤lt anger mottagarens IP-adress.


Wireshark
  Ã„r ett Ã¶ppet verktyg fÃ¶r nÃ¤tverksanalys som anvÃ¤nder ett grafiskt grÃ¤nssnitt fÃ¶r att visualisera och analysera nÃ¤tverkstrafik.
    - Display filters: GÃ¶r det mÃ¶jligt att filtrera pÃ¥ protokoll, IP-adresser, portar och andra fÃ¤lt.
    - JÃ¤mfÃ¶relseoperatorer: AnvÃ¤nds fÃ¶r att specificera vÃ¤rden (t.ex. ==, !=, >, < eller motsvarande fÃ¶rkortningar). De kan kombineras med logiska operatorer som and och or.
    - Contains: Filtrerar paket som innehÃ¥ller en specifik textstrÃ¤ng.
    - Matches: Filtrerar paket med hjÃ¤lp av reguljÃ¤ra uttryck (regex).
    - Filter toolbar: HÃ¤r skriver man in filter, exempelvis dns fÃ¶r att bara visa DNS-paket. Wireshark anvÃ¤nder Ã¤ven fÃ¤rger fÃ¶r olika protokoll.
      Filtreringstyper:
        Protokoll: Exempelvis dns, http, ftp, ssh, arp, telnet, icmp.
        IP-adress: ip.addr == 172.21.224.2, ip.src (kÃ¤lla), ip.dst (destination).
        MAC-adress: eth.addr == 00:70:f4:23:18:c4.
        Portar: udp.port == 53, tcp.port == 25.
Follow streams: GÃ¶r det mÃ¶jligt att fÃ¶lja en konversation (stream) mellan tvÃ¥ enheter och Ã¥terstÃ¤lla kommunikationen i ett mer lÃ¤sbart format, t.ex. 
en HTTP-fÃ¶rfrÃ¥gan och dess svar.
ğŸ‘‰ Kort sagt: Wireshark lÃ¥ter dig filtrera och analysera nÃ¤tverkstrafik pÃ¥ ett effektivt sÃ¤tt genom att anvÃ¤nda filter fÃ¶r protokoll, adresser, portar och strÃ¶mmar.


TCP dump
  Ã„r ett kraftfullt kommandoradsverktyg fÃ¶r att analysera nÃ¤tverkstrafik i realtid. 
  Det anvÃ¤nds ofta av nÃ¤tverksadministratÃ¶rer och sÃ¤kerhetsexperter fÃ¶r felsÃ¶kning, Ã¶vervakning och insamling av data.
Huvudpunkter om TCPdump:
  Funktion: fÃ¥ngar upp nÃ¤tverkspaket som passerar ett nÃ¤tverksgrÃ¤nssnitt (t.ex. eth0) Kan visa paketen direkt i terminalen eller spara ner i en fil (.pcap -format) fÃ¶r senare.
  ProtokollstÃ¶d: stÃ¶djer dem flesta sÃ¥ som TCP, UPD, ICMP, ARP och IPv4/IPv6.
  Filter: Precis som wireshark kan det filtrera pÃ¥ protokoll, IP, portar m.m. Exempel: 
    - tcpdump port 80 => Visar trafik pÃ¥ port 80
    - tcpdump host 8.8.8.8 => visar trafik till eller frÃ¥n 8.8.8.8
    - tcpdump src 192.168.1.10 => visar trafik frÃ¥n en viss kÃ¤lla.
    - tcp dst port 22 => visar trafik till port 22 (SSH)
Mer Exempel
    - sudo tcpdump -i eth0 => FÃ¥ngar all trafik nÃ¤tverksgrÃ¤nssnittet eth0
    - sudo tcpdump -i eth0 -w capture.pcap => sparar all fÃ¥ngad trafik i fil capture.pcap
ğŸ‘‰ Kort sagt: TCPdump Ã¤r Wireshark fast i terminalen â€“ snabbare, mer resurssnÃ¥lt, men mindre anvÃ¤ndarvÃ¤nligt fÃ¶r nybÃ¶rjare.
  olika options och dess betydelse
  -i => Interface, Anger vilket nÃ¤tverksgrÃ¤nssnitt som ska anvÃ¤ndas fÃ¶r att snappa upp trafik.
  -v => Verbose, GÃ¶r utskriften mer detaljerad. Kan upprepas (-vv eller -vvv) fÃ¶r Ã¤nnu mer information om paketen.
  -D => List Devices, Visar en lista Ã¶ver alla tillgÃ¤ngliga nÃ¤tverksgrÃ¤nssnitt som tcpdump kan lyssna pÃ¥.
  -c 2 (eller nÃ¥tt annat nummer) Count, Anger hur mÃ¥nga paket som ska fÃ¥ngas innan tcpdump avslutas.
  -w => LÃ¥ter oss spara nÃ¤tverkspaket till en fil fÃ¶r senare analys.







Module 3
Detection & Analysis Phase: 
  SÃ¤kerhetsteam anvÃ¤nder verktyg som IDS och SIEM fÃ¶r att upptÃ¤cka och analysera incidenter. En utmaning Ã¤r att dessa verktyg bara kan upptÃ¤cka det de Ã¤r konfigurerade fÃ¶r.
Threat hunting: 
  Proaktiv metod dÃ¤r sÃ¤kerhetsexperter aktivt letar efter hot som automatiserade verktyg missar, t.ex. svÃ¥rupptÃ¤ckt fil-lÃ¶s malware. Kombinerar mÃ¤nsklig analys med teknik.
Threat intelligence: 
  Information om hot frÃ¥n kÃ¤llor som branschrapporter, myndighetsvarningar och hotdatastreams (t.ex. IP-adresser, domÃ¤ner, fil-hashar). 
  Kan centraliseras via en Threat Intelligence Platform (TIP) fÃ¶r att fÃ¶rbÃ¤ttra detektion och prioritering.
Cyber deception: 
  Tekniker som avsiktligt lurar angripare. Exempel: honeypots, dvs. falska resurser eller filer som angripare lockas till. NÃ¤r de fÃ¶rsÃ¶ker fÃ¥ Ã¥tkomst triggas en varning.

ğŸ‘‰ Kort sagt: UtÃ¶ver traditionella verktyg stÃ¤rker organisationer sin detektion med proaktiv threat hunting, 
  hotinformation och cyber deception fÃ¶r att upptÃ¤cka hot som annars kan fÃ¶rbli dolda.


CI/CD
CI/CD-pipelines gÃ¶r mjukvaruutveckling snabbare men Ã¶ppnar ocksÃ¥ fÃ¶r nya sÃ¥rbarheter. 
DÃ¤rfÃ¶r Ã¤r kontinuerlig Ã¶vervakning viktig fÃ¶r att automatiskt upptÃ¤cka ovanlig aktivitet och Indicators of Compromise (IoCs).
Vanliga IoCs i CI/CD:
  - ObehÃ¶riga kodÃ¤ndringar: misstÃ¤nkta commits frÃ¥n fel anvÃ¤ndare, tider eller platser.
  - Avvikande deployment-mÃ¶nster: distributioner vid ovanliga tidpunkter, till fel system eller frÃ¥n fel konton.
  - Komprometterade beroenden: kÃ¤nda sÃ¥rbarheter (CVEs), ovÃ¤ntade nya beroenden, nedladdningar frÃ¥n osÃ¤kra kÃ¤llor.
  - Ovanlig pipeline-kÃ¶rning: steg som misslyckas, tar lÃ¤ngre tid Ã¤n normalt, eller kÃ¶rs i fel ordning.
  - FÃ¶rsÃ¶k till sekretsexponering: obehÃ¶rig Ã¥tkomst till hemligheter eller hÃ¥rdkodade hemligheter i kod.

Metoder fÃ¶r att hitta hot:
  - Omfattande loggning: analysera kÃ¶rningsloggar, kodcommits, Ã¥tkomstloggar och deployment-loggar med automatiska baselines fÃ¶r att upptÃ¤cka avvikelser.
  - SIEM-integration: koppla CI/CD-loggar till ett SIEM fÃ¶r att upptÃ¤cka anomalier, matcha kÃ¤nda IoCs (t.ex. skadliga filhashar, C2-anslutningar) och trigga regler.
  - Realtidsvarningar: notifiera omedelbart om misstÃ¤nkta hÃ¤ndelser (t.ex. kodfÃ¶rÃ¤ndringar, misslyckade builds, ovanlig nÃ¤tverkstrafik).
  - PrestandaÃ¶vervakning: upptÃ¤cka ovanlig resursanvÃ¤ndning eller lÃ¥ngsamma pipelines som kan indikera attacker.
  - Kontinuerlig sÃ¥rbarhetsskanning: hitta och patcha svagheter i CI/CD-verktyg, plugins och containers.

FÃ¶rdelar med proaktiv Ã¶vervakning:
  - Snabb respons â†’ stoppa attacker innan de orsakar skada.
  - Minskad pÃ¥verkan â†’ begrÃ¤nsa angriparnas tid i systemet.
  - BÃ¤ttre hotfÃ¶rstÃ¥else â†’ lÃ¤rdomar om angripares metoder stÃ¤rker framtida sÃ¤kerhet.

ğŸ‘‰ Kort sagt: Automatiserad Ã¶vervakning av CI/CD med loggning, SIEM, varningar, prestandaÃ¶vervakning och sÃ¥rbarhetsskanning gÃ¶r det mÃ¶jligt att upptÃ¤cka IoCs tidigt, 
  svara snabbt och skydda mjukvarufÃ¶rsÃ¶rjningskedjan.



Indicators of Compromise (IoCs)
























